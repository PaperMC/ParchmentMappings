CLASS net/minecraft/client/resources/model/ModelDiscovery
	METHOD <init> (Ljava/util/Map;Lnet/minecraft/client/resources/model/UnbakedModel;)V
		ARG 1 inputModels
		ARG 2 missingModel
	METHOD addRoot (Lnet/minecraft/client/resources/model/ResolvableModel;)V
		ARG 1 model
	METHOD addSpecialModel (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V
		ARG 1 id
		ARG 2 model
	METHOD createAndQueueWrapper (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)Lnet/minecraft/client/resources/model/ModelDiscovery$ModelWrapper;
		ARG 1 id
		ARG 2 model
	METHOD discoverDependencies (Ljava/util/List;)V
		ARG 1 wrappers
	METHOD getBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel;
		ARG 1 modelLocation
	METHOD getOrCreateModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/ModelDiscovery$ModelWrapper;
		ARG 1 location
	METHOD isRoot (Lnet/minecraft/client/resources/model/UnbakedModel;)Z
		ARG 0 model
	METHOD lambda$discoverDependencies$0 (Lnet/minecraft/client/resources/model/ResolvableModel;)V
		ARG 1 model
	METHOD lambda$resolve$1 (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelDiscovery$ModelWrapper;)V
		ARG 1 id
		ARG 2 wrapper
	METHOD loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel;
		ARG 1 modelLocation
	METHOD propagateValidity (Ljava/util/List;)V
		ARG 0 wrappers
	METHOD registerItemTopModel (Lnet/minecraft/resources/ResourceLocation;)V
		ARG 1 itemId
	METHOD registerSpecialItemTopModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V
		ARG 1 modelLocation
	METHOD registerStandardModels (Lnet/minecraft/client/resources/model/BlockStateModelLoader$LoadedModels;)V
		ARG 1 loadedModels
	METHOD registerTopModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V
		ARG 1 id
		ARG 2 model
	CLASS ModelWrapper
		METHOD <init> (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;Z)V
			ARG 1 id
			ARG 2 wrapped
			ARG 3 valid
		METHOD bakeDefaultState (Lnet/minecraft/client/renderer/block/model/TextureSlots;Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/QuadCollection;
			ARG 1 textureSlots
			ARG 2 modelBaker
			ARG 3 modelState
		METHOD getSimpleProperty (Lnet/minecraft/client/resources/model/ModelDiscovery$Slot;Ljava/util/function/Function;)Ljava/lang/Object;
			ARG 1 slot
			ARG 2 propertyGetter
		METHOD getSlot (Lnet/minecraft/client/resources/model/ModelDiscovery$Slot;)Ljava/lang/Object;
			ARG 1 slot
		METHOD lambda$bakeTopGeometry$0 (Lnet/minecraft/client/renderer/block/model/TextureSlots;Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/QuadCollection;
			ARG 3 state
		METHOD slot (I)Lnet/minecraft/client/resources/model/ModelDiscovery$Slot;
			ARG 0 index
		METHOD updateSlot (Lnet/minecraft/client/resources/model/ModelDiscovery$Slot;Ljava/lang/Object;)Ljava/lang/Object;
			ARG 1 slot
			ARG 2 value
	CLASS ResolverImpl
		METHOD isReferenceRecursive (Lnet/minecraft/resources/ResourceLocation;Z)Z
			ARG 1 modelLocation
			ARG 2 override
		METHOD resolve (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/UnbakedModel;
			ARG 1 modelLocation
			ARG 2 override
