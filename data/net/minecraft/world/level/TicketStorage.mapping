CLASS net/minecraft/world/level/TicketStorage
	METHOD <init> (Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V
		ARG 1 tickets
		ARG 2 deactivatedTickets
	METHOD addTicket (JLnet/minecraft/server/level/Ticket;)Z
		ARG 1 chunkPos
		ARG 3 ticket
	METHOD addTicket (Lnet/minecraft/server/level/Ticket;Lnet/minecraft/world/level/ChunkPos;)V
		ARG 1 ticket
		ARG 2 chunkPos
	METHOD addTicketWithRadius (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;I)V
		ARG 1 ticketType
		ARG 2 chunkPos
		ARG 3 radius
	METHOD forEachTicket (Ljava/util/function/BiConsumer;)V
		ARG 1 action
	METHOD forEachTicket (Ljava/util/function/BiConsumer;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V
		ARG 0 action
		ARG 1 tickets
	METHOD fromPacked (Ljava/util/List;)Lnet/minecraft/world/level/TicketStorage;
		ARG 0 packed
	METHOD getAllChunksWithTicketThat (Ljava/util/function/Predicate;)Lit/unimi/dsi/fastutil/longs/LongSet;
		ARG 1 predicate
	METHOD getLowestTicket (Ljava/util/List;Z)Lnet/minecraft/server/level/Ticket;
		ARG 0 tickets
		ARG 1 requireSimulation
	METHOD getOrCreateTickets (J)Ljava/util/List;
		ARG 1 chunkPos
	METHOD getTicketDebugString (JZ)Ljava/lang/String;
		ARG 1 chunkPos
		ARG 3 requireSimulation
	METHOD getTicketLevelAt (JZ)I
		ARG 1 chunkPos
		ARG 3 requireSimulation
	METHOD getTicketLevelAt (Ljava/util/List;Z)I
		ARG 0 tickets
		ARG 1 requireSimulation
	METHOD getTickets (J)Ljava/util/List;
		ARG 1 chunkPos
	METHOD isTicketSameTypeAndLevel (Lnet/minecraft/server/level/Ticket;Lnet/minecraft/server/level/Ticket;)Z
		ARG 0 first
		ARG 1 second
	METHOD lambda$deactivateTicketsOnClosing$6 (Lnet/minecraft/server/level/Ticket;)Z
		ARG 0 ticket
	METHOD lambda$load$0 (J)Ljava/util/List;
		ARG 0 chunkPos
	METHOD lambda$packTickets$2 (Ljava/util/List;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/Ticket;)V
		ARG 1 chunkPos
		ARG 2 ticket
	METHOD lambda$purgeStaleTickets$5 (Lnet/minecraft/server/level/Ticket;)Z
		ARG 0 ticket
	METHOD lambda$removeTicketIf$7 (Lit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;J)Ljava/util/List;
		ARG 1 chunkPos
	METHOD lambda$save$1 (Lnet/minecraft/nbt/ListTag;Ljava/lang/Long;Ljava/util/List;)V
		ARG 1 chunkPos
		ARG 2 tickets
	METHOD lambda$save$2 (Lnet/minecraft/nbt/ListTag;Ljava/lang/Long;Ljava/util/List;)V
		ARG 1 chunkPos
		ARG 2 tickets
	METHOD lambda$static$0 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
		ARG 0 instance
	METHOD lambda$updateForcedChunks$4 (Lnet/minecraft/server/level/Ticket;)Z
		ARG 0 ticket
	METHOD load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/world/level/TicketStorage;
		ARG 0 tag
		ARG 1 registries
	METHOD removeTicket (JLnet/minecraft/server/level/Ticket;)Z
		ARG 1 chunkPos
		ARG 3 ticket
	METHOD removeTicket (Lnet/minecraft/server/level/Ticket;Lnet/minecraft/world/level/ChunkPos;)V
		ARG 1 ticket
		ARG 2 chunkPos
	METHOD removeTicketIf (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V
		ARG 1 predicate
		ARG 2 tickets
	METHOD removeTicketWithRadius (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;I)V
		ARG 1 ticketType
		ARG 2 chunkPos
		ARG 3 radius
	METHOD replaceTicketLevelOfType (ILnet/minecraft/server/level/TicketType;)V
		ARG 1 level
		ARG 2 type
	METHOD saveTicketsForChunk (Lnet/minecraft/nbt/ListTag;JLjava/util/List;)V
		ARG 0 listTag
		ARG 1 chunkPos
		ARG 3 tickets
	METHOD setLoadingChunkUpdatedListener (Lnet/minecraft/world/level/TicketStorage$ChunkUpdated;)V
		ARG 1 loadingChunkUpdatedListener
	METHOD setSimulationChunkUpdatedListener (Lnet/minecraft/world/level/TicketStorage$ChunkUpdated;)V
		ARG 1 simulationChunkUpdatedListener
	METHOD updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)Z
		ARG 1 chunkPos
		ARG 2 add
	CLASS ChunkUpdated
		METHOD update (JIZ)V
			ARG 1 chunkPos
			ARG 3 ticketLevel
			ARG 4 isDecreasing
