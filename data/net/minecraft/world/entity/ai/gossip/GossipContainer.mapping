CLASS net/minecraft/world/entity/ai/gossip/GossipContainer
	METHOD <init> (Ljava/util/List;)V
		ARG 1 entries
	METHOD add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V
		ARG 1 identifier
		ARG 2 gossipType
		ARG 3 gossipValue
	METHOD getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J
		ARG 1 gossipType
		ARG 2 gossipPredicate
	METHOD getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips;
		ARG 1 identifier
	METHOD getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I
		ARG 1 identifier
		ARG 2 gossip
	METHOD lambda$getCountForType$6 (Ljava/util/function/DoublePredicate;Lnet/minecraft/world/entity/ai/gossip/GossipType;Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips;)Z
		ARG 2 gossips
	METHOD lambda$getGossipEntries$2 (Ljava/util/Map;Ljava/util/UUID;)V
		ARG 2 uuid
	METHOD lambda$getOrCreate$4 (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips;
		ARG 0 uuid
	METHOD lambda$new$1 (Lnet/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry;)V
		ARG 1 entry
	METHOD lambda$putAll$8 (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips;)V
		ARG 1 uuid
		ARG 2 gossips
	METHOD lambda$transferFrom$5 (Lnet/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry;)V
		ARG 1 entry
	METHOD lambda$unpack$3 (Ljava/util/Map$Entry;)Ljava/util/stream/Stream;
		ARG 0 entry
	METHOD mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I
		ARG 1 gossipType
		ARG 2 existing
		ARG 3 additive
	METHOD mergeValuesForTransfer (II)I
		COMMENT {@return the greater of two int values}
		ARG 0 value1
		ARG 1 value2
	METHOD putAll (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;)V
		ARG 1 other
	METHOD remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V
		ARG 1 identifier
		ARG 2 gossipType
	METHOD remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V
		ARG 1 identifier
		ARG 2 gossipType
		ARG 3 gossipValue
	METHOD remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V
		ARG 1 gossipType
	METHOD selectGossipsForTransfer (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection;
		ARG 1 random
		ARG 2 amount
	METHOD transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Lnet/minecraft/util/RandomSource;I)V
		ARG 1 container
		ARG 2 randomSource
		ARG 3 amount
	CLASS GossipEntry
		METHOD <init> (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V
			ARG 1 target
			ARG 2 type
			ARG 3 value
		METHOD lambda$static$0 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
			ARG 0 instance
	CLASS EntityGossips
		METHOD lambda$unpack$2 (Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry;
			ARG 1 gossip
		METHOD lambda$weightedValue$0 (Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z
			ARG 1 gossip
		METHOD lambda$weightedValue$1 (Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I
			ARG 0 gossip
		METHOD makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V
			ARG 1 gossipType
		METHOD remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V
			ARG 1 gossipType
		METHOD unpack (Ljava/util/UUID;)Ljava/util/stream/Stream;
			ARG 1 identifier
		METHOD weightedValue (Ljava/util/function/Predicate;)I
			ARG 1 gossipType
