CLASS net/minecraft/server/packs/metadata/pack/PackFormat
	METHOD compareTo (Lnet/minecraft/server/packs/metadata/pack/PackFormat;)I
		ARG 1 other
	METHOD fullCodec (I)Lcom/mojang/serialization/Codec;
		ARG 0 defaultMinorVersion
	METHOD lastPreMinorVersion (Lnet/minecraft/server/packs/PackType;)I
		ARG 0 type
	METHOD of (I)Lnet/minecraft/server/packs/metadata/pack/PackFormat;
		ARG 0 major
	METHOD of (II)Lnet/minecraft/server/packs/metadata/pack/PackFormat;
		ARG 0 major
		ARG 1 minor
	METHOD packCodec (Lnet/minecraft/server/packs/PackType;)Lcom/mojang/serialization/MapCodec;
		ARG 0 packType
	METHOD validateHolderList (Ljava/util/List;ILjava/util/function/BiFunction;)Lcom/mojang/serialization/DataResult;
		ARG 0 holderList
		ARG 1 versionThreshold
		ARG 2 mapper
	CLASS IntermediaryFormat
		METHOD fromRange (Lnet/minecraft/util/InclusiveRange;I)Lnet/minecraft/server/packs/metadata/pack/PackFormat$IntermediaryFormat;
			ARG 0 range
			ARG 1 versionThreshold
		METHOD lambda$static$0 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
			ARG 0 instance
		METHOD lambda$static$2 (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;
			ARG 0 instance
		METHOD validate (IZZLjava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;
			ARG 1 versionThreshold
			ARG 2 requireOldFormat
			ARG 3 requireNewFormat
			ARG 4 contextLabel
			ARG 5 oldFormatsKey
		METHOD validateNewFormat (IZZLjava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;
			ARG 1 versionThreshold
			ARG 2 requireOldFormat
			ARG 3 requireNewFormat
			ARG 4 contextLabel
			ARG 5 oldFormatsKey
		METHOD validateOldFormat (IZLjava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;
			ARG 1 versionThreshold
			ARG 2 requireOldFormat
			ARG 3 contextLabel
			ARG 4 oldFormatsKey
		METHOD validatePackFormatForRange (II)Ljava/lang/String;
			ARG 1 min
			ARG 2 max
